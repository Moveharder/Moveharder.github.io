import{_ as s,c as i,o as a,a2 as l}from"./chunks/framework.lL4UzoDo.js";const n="/wcdocs/assets/lama_cleaner_ui.eppMF0U6.png",h="/wcdocs/assets/lama_cleaner_demo.DOv3M23K.gif",C=JSON.parse('{"title":"Lama Cleaner 使用指南","description":"","frontmatter":{},"headers":[],"relativePath":"AIGC/lama_cleaner.md","filePath":"AIGC/lama_cleaner.md","lastUpdated":1728551714000}'),t={name:"AIGC/lama_cleaner.md"},e=l('<h1 id="lama-cleaner-使用指南" tabindex="-1">Lama Cleaner 使用指南 <a class="header-anchor" href="#lama-cleaner-使用指南" aria-label="Permalink to &quot;Lama Cleaner 使用指南&quot;">​</a></h1><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><ul><li><p>先切换到 venv 环境：source venv/bin/activate，没有先创建。</p></li><li><p>然后根据电脑情况选择模型：</p></li></ul><ol><li>CPU 模式：<code>lama-cleaner --model=lama --device=cpu --port=8080 --host=0.0.0.0</code></li><li>GPU 模式：<code>lama-cleaner --model=lama --device=cuda --port=8080 --host=0.0.0.0</code></li></ol><ul><li>运行界面</li></ul><p><img src="'+n+'" alt="运行界面"></p><p><img src="'+h+`" alt="基本用法"></p><h2 id="安装-错误处理" tabindex="-1">安装&amp;错误处理 <a class="header-anchor" href="#安装-错误处理" aria-label="Permalink to &quot;安装&amp;错误处理&quot;">​</a></h2><h3 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h3><ul><li>Python 3.10.0：下载地址 <code>https://www.python.org/downloads/</code></li><li>Rust/Cargo ：安装地址 <code>https://www.rust-lang.org/learn/get-started</code></li></ul><h3 id="下载lama-cleaner" tabindex="-1">下载lama-cleaner <a class="header-anchor" href="#下载lama-cleaner" aria-label="Permalink to &quot;下载lama-cleaner&quot;">​</a></h3><p><code>pip install lama-cleaner</code></p><h3 id="如果在mac上安装失败-如" tabindex="-1">如果在Mac上安装失败，如： <a class="header-anchor" href="#如果在mac上安装失败-如" aria-label="Permalink to &quot;如果在Mac上安装失败，如：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Building</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wheels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> collected</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tokenizers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Building</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wheel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tokenizers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (pyproject.toml) ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> casting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mut</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> T\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> undefined</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> behavior,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> even</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reference</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unused,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> consider</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instead</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UnsafeCell</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tokenizers-lib/src/models/bpe/trainer.rs:526:47</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      522</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                     let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">words[*i]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mut</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                             --------------------------------</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> casting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> happend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> here</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      526</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                         let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> word:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mut</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Word</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mut</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (*w);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                                               ^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> note:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> information,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> visit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://doc.rust-lang.org/book/ch15-05-interior-mutability.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> note:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#[deny(invalid_reference_casting)]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      warning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tokenizers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generated</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warnings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> could</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tokenizers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">due</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> previous</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warnings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> emitted</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">note:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> originates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subprocess,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> likely</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> problem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ERROR:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> building</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wheel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tokenizers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tokenizers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ERROR:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ERROR:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> installable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wheels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> some</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyproject.toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> based</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> projects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (tokenizers)</span></span></code></pre></div><h4 id="解决方法" tabindex="-1">解决方法： <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法：&quot;">​</a></h4><ul><li>1.create a empty dir;</li><li>2.enter this dir;</li><li>3.create a clean venv:</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv/bin/activate</span></span></code></pre></div><ul><li>4.<code>pip install lama-cleaner</code></li></ul><h3 id="如果自动安装模型失败" tabindex="-1">如果自动安装模型失败： <a class="header-anchor" href="#如果自动安装模型失败" aria-label="Permalink to &quot;如果自动安装模型失败：&quot;">​</a></h3><p>手动下载模型：<code>curl -L -o big-lama.pt https://github.com/Sanster/models/releases/download/add_big_lama/big-lama.pt</code></p><p>然后将它放到指定目录下： Mac目录：<code>mv big-lama.pt /Users/YOUR_USER_NAME/.cache/torch/hub/checkpoints/</code> Windows目录：<code>mv big-lama.pt C:\\Users\\YOUR_USER_NAME\\.cache\\torch\\hub\\checkpoints\\</code></p><h3 id="修改了文件夹名称后运行lama-cleaner报错-命令不存在" tabindex="-1">修改了文件夹名称后运行lama-cleaner报错：命令不存在 <a class="header-anchor" href="#修改了文件夹名称后运行lama-cleaner报错-命令不存在" aria-label="Permalink to &quot;修改了文件夹名称后运行lama-cleaner报错：命令不存在&quot;">​</a></h3><h4 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-label="Permalink to &quot;原因&quot;">​</a></h4><p>更改文件夹名称后，原来的虚拟环境路径会失效。解决方法是重新创建虚拟环境并重新安装所有依赖。这样可以确保所有路径都是正确的，并且所有依赖都能正常工作。</p><h4 id="解决方法-1" tabindex="-1">解决方法： <a class="header-anchor" href="#解决方法-1" aria-label="Permalink to &quot;解决方法：&quot;">​</a></h4><ul><li><p>步骤 1：重新创建虚拟环境 <code>rm -rf /Users/fatiaoya/codedev/wc/AI/lama_cleaner/venv</code></p></li><li><p>步骤 2：在新位置重新创建虚拟环境</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /Users/fatiaoya/codedev/wc/AI/lama_cleaner</span></span>
<span class="line"><span>python3 -m venv venv</span></span>
<span class="line"><span>source venv/bin/activate</span></span></code></pre></div><ul><li>步骤 3：重新安装 lama-cleaner</li></ul><p><code>pip install lama-cleaner</code></p><h3 id="如果gpu模式启动失败" tabindex="-1">如果GPU模式启动失败 <a class="header-anchor" href="#如果gpu模式启动失败" aria-label="Permalink to &quot;如果GPU模式启动失败&quot;">​</a></h3><p>说明电脑没有CUDA版本的Pytorch，请安装CUDA版本的Pytorch。</p><p>个性化安装CUDA版本的Pytorch，下载页面：<code>https://pytorch.org/get-started/locally/</code></p><p>如果上面的链接没有对应版本，访问链接：<code>https://pytorch.org/get-started/previous-versions/</code></p><p>比如CUDA版本12.1：<code>pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121</code></p><p>查看CUDA版本的方法：打开CMD命令行，输入：<code>nvidia-smi</code> 查看CUDA版本。</p><h3 id="参考链接" tabindex="-1">参考链接： <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接：&quot;">​</a></h3><p>1.<a href="https://lama-cleaner-docs.vercel.app/install/pip" target="_blank" rel="noreferrer">https://lama-cleaner-docs.vercel.app/install/pip</a></p><p>2.<a href="https://github.com/Sanster/lama-cleaner-docs/issues/21" target="_blank" rel="noreferrer">https://github.com/Sanster/lama-cleaner-docs/issues/21</a></p><p>3.<a href="https://blog.csdn.net/Changxing_J/article/details/128604798" target="_blank" rel="noreferrer">https://blog.csdn.net/Changxing_J/article/details/128604798</a></p>`,39),p=[e];function k(r,F,d,o,c,g){return a(),i("div",null,p)}const E=s(t,[["render",k]]);export{C as __pageData,E as default};
